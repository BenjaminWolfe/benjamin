[{"authors":["admin"],"categories":null,"content":"Data scientist @DP_InsurTech , recreational #rstats developer, lifelong learner, analytics community builder, poet, writer, and tidyverse fan.\nI live in Austin, TX with my wife Karin and kids Brylie \u0026amp; Evan, all of us Bay Area transplants. When I\u0026rsquo;m not at my laptop, you can find me with my white lab, Ivy, my Roo hammock , my binoculars, and my journal.\n","date":1554595200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1584242737,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Data scientist @DP_InsurTech , recreational #rstats developer, lifelong learner, analytics community builder, poet, writer, and tidyverse fan.\nI live in Austin, TX with my wife Karin and kids Brylie \u0026amp; Evan, all of us Bay Area transplants. When I\u0026rsquo;m not at my laptop, you can find me with my white lab, Ivy, my Roo hammock , my binoculars, and my journal.","tags":null,"title":"Benjamin E. Wolfe","type":"authors"},{"authors":null,"categories":null,"content":"Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1579876495,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"/courses/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579876495,"objectID":"74533bae41439377bd30f645c4677a27","permalink":"/courses/example/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example1/","section":"courses","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579876495,"objectID":"1c2b5a11257c768c90d5050637d77d6a","permalink":"/courses/example/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes .  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579876495,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":[],"categories":[],"content":"  It’s been many years since Easter was more for me than brunch and candy and egg hunts.\nLately I’ve been thinking, though, about what Easter does and doesn’t mean, about what it might mean to me as a former believer, and about how all that meaning relates to America’s cultural and political divide.\nThe Dilemma of Winston’s Diary That topic is a lot to take on, so I’ll start by acknowledging two inherent challenges it’s posed.\nFirst is the difficulty of writing about Easter as a former believer. There was a time back in the 90s and early 2000s when “being saved” meant a lot to me, and Easter was bound up with that identity. Now I no longer see myself that way. But especially since I’ve let it go for so long, “old me” still asks: Why would someone who’s rejected that very serious, religious identity have anything to say about Easter? Why would they even care?\nMore on that later.\nThere’s the question of why a former true believer would write about Easter, and then there’s a question of whom I’d write it for. I’ve always called this question “the dilemma of Winston’s diary.” In the book 1984, as the main character Winston starts writing his diary, he pauses over the date—which, coincidentally, happens to be April 4th—to consider his audience:\n In small clumsy letters he wrote:\nApril 4th, 1984.\nHe sat back. A sense of complete helplessness had descended upon him….\nFor whom, it suddenly occurred to him to wonder, was he writing this diary? … How could you communicate with the future? It was of its nature impossible. Either the future would resemble the present, in which case it would not listen to him: or it would be different from it, and his predicament would be meaningless.\n For those who’ve been steeped in a religious milieu but no longer belong in it, writing about the experience can feel very much like Winston’s dilemma. Do I write for those on the inside, who have a frame of reference to understand the content but would likely disagree with the content? Or do I write for those on the outside with no frame of reference?\nMyself, I believe the answer is both and neither. Even in the most warped and fascistic environments, whether of a religious subculture or a totalitarian regime, some readers will understand and be transformed by an honest account. And even in the most perfect society, there’s enough continuity in human nature that readers can understand what other humans are capable of. After all, people still read Orwell, Kundera, and Dostoevsky.\nMore than that, in the context of this article, plenty of people are in the middle between those extremes: acquainted with the basics of Easter and Holy Week, but not firmly in the camp of the indoctrinated. For this piece, I’m going to assume no prior knowledge of the holiday season, and walk through the basics of Easter and Holy Week from the get go.\n Don Francisco I’d like to start, perhaps unfairly, with a song. I say unfairly because it encapsulates and embodies all my least favorite views of Easter! But it’s where we’ll start because it’s vivid, and the ballad will set the scene for even those least familiar with the story. It’s written from the perspective of Peter, one of Jesus’ closest followers, in the pre-dawn hours of the first Easter.\nYou should know that the piece has a clear devotional tone, but it’s enough of a populist storytelling affair to be sung by the likes of Dolly Pardon. I’ve included the video for full effect, or of course you can read the lyrics below. The song is called He’s Alive, by Don Francisco:\n   The gates and doors were barred\nAnd all the windows fastened down\nI spent the night in sleeplessness\nAnd rose at every sound\nHalf in hopeless sorrow\nAnd half in fear the day\nWould find the soldiers breakin’ through\nTo drag us all away\nAnd just before the sunrise\nI heard something at the wall\nThe gate began to rattle\nAnd a voice began to call\nI hurried to the window\nLooked down into the street\nExpecting swords and torches\nAnd the sound of soldiers’ feet\nBut there was no one there but Mary\nSo I went down to let her in\nJohn stood there beside me\nAs she told me where she’d been\nShe said they’ve moved him in the night\nAnd none of us knows where\nThe stone’s been rolled away\nAnd now his body isn’t there\nSo we both ran towards the garden\nThen John ran on ahead\nWe found the stone and empty tomb\nJust the way that Mary said\nBut the winding sheet, they wrapped him in\nWas just an empty shell\nAnd how or where they’d taken him\nWas more than I could tell\nOh, something strange had happened there\nJust what I did not know\nJohn believed a miracle\nBut I just turned to go\nCircumstance and speculation\nCouldn’t lift me very high\n’Cause I’d seen them crucify him\nThen I saw him die\nBack inside the house again\nThe guilt and anguish came\nEverything I’d promised him\nJust added to my shame\nWhen at last it came to choices\nI denied I knew his name\nAnd even if he was alive\nIt wouldn’t be the same\nBut suddenly the air was filled\nWith a strange and sweet perfume\nLight that came from everywhere\nDrove shadows from the room\nAnd Jesus stood before me\nWith his arms held open wide\nAnd I fell down on my knees\nAnd I just clung to him and cried\nThen he raised me to my feet\nAnd as I looked into his eyes\nThe love was shining out from him\nLike sunlight from the skies\nGuilt in my confusion\nDisappeared in sweet release\nAnd every fear I’d ever had\nJust melted into peace\nHe’s alive, yes he’s alive\nYes, he’s alive and I’m forgiven\nHeaven’s gates are open wide\nHe’s alive (he’s alive), yes he’s alive (he’s alive)\nOh, he’s alive and I’m forgiven\nHeaven’s gates are open wide\nHe’s alive, he’s alive\nHallelujah, he’s alive\nHe’s alive and I’m forgiven\nHeaven’s gates are open wide\nHe’s alive (he’s alive), he’s alive (he’s alive)\nHe’s alive\nI believe it, he’s alive\nSweet Jesus\n  The Backstory: Holy Week, from Triumph to Tragedy The air is tense in Don Francisco’s Easter morning. One could make the case that it should have been.\nA week prior, on what Christians today celebrate as Palm Sunday, Jesus and his followers had entered into the holy city of Jerusalem. It was a triumphal entry: Crowds waived palm fronds to hail his arrival; hence the name.\nExpectations were high for Jesus’ debut. Jesus had spent his ministry so far out in the countryside, and now the itinerant preacher was coming into the center of it all for Passover.\nAnd as the story goes, some of Jesus’ followers thought he was preparing to overthrow the government. Jerusalem was not just the religious and cultural center of the province; it was also the capital city. Rome had established a secular government there atop a thriving religious society. These zealots expected Jesus to end all that.\nAs I’d describe it, this zealotry was much like what we’d call conspiracy theory today. Jesus didn’t have the Romans outmanned or out-weaponed. These followers thought that, when the chips were down, God would come through and intervene dramatically in the course of history. At least, that’s how they were always painted in the Easter stories I heard. They were true believers.\nOn Thursday of the week, Jesus shared an intimate Passover meal with his closest followers. It would be their Last Supper together. Per the story, Jesus had gathered some enemies by that point in the week. There was an incident where he went off on money lenders in the temple. And of course there were rumors that he intended to stage a coup.\nSo in a twist that would echo through literature and art from Giotto’s The Last Supper to Cypher from The Matrix, one of Jesus’ followers named Judas left from that intimate meal to hand Jesus over to the authorities. The Bible account says Judas was paid for his betrayal, and Wikipedia says he may have been a disillusioned follower. In Evangelical circles, I’d often heard the theory that Judas thought he was hastening things along: If the authorities came for Jesus, he’d have to show up in force! Again, Judas was the true believer.\nAnd then came Good Friday: the real test of it all. After all that wind-up, the triumphal entry into Jerusalem, the rumors that Jesus was going to change history in a dramatic turn—and maybe even a move to force his hand when things weren’t heating up fast enough!—the revolution came to an end. God did not save the day. No one overthrew the government. History continued its boring, ineluctable march. The Romans has Jesus executed publicly as a common criminal, as they did all rabble rousers, to serve as an example.\n An Echo through History I’d like to pause to draw an explicit parallel here. At this point in the story we have a group of true believers in crisis. They thought they were at the forefront of a vital culture war (or literal war) between their religious way of life and the secular powers that be. They’ve advanced on the capital, certain of the rightness of their movement. They were absolutely certain they’d see their chosen figure emerge victorious in a dramatic break from history.\nAnd yet now that none of that happened, they’re confused and troubled. If you listen between the lines of Don Francisco’s story, they have a bit of a persecution complex, now that they’ve made enemies of the secular powers of the day. You might say a bit anachronistically that they’re afraid of a world who literally believes their God is dead.\nAnd while that last note would be anachronistic—Jesus’ followers didn’t think he was God at that point—it hints at a deep connection to modern society: a resonance between the zealots of Jesus’ Easter morning and America’s post-Trump religious right. More pointedly, though not all Q-Anon followers are Evangelical Christians, those last two paragraphs describe the true believers of the American followers of Q.\nEvery true believer eventually has a Good Friday. It may not be as dramatic as Don Francisco’s ballad, or as publicly shared as January 6th or 20th this year in DC. But whether we’re talking about a resurrection in the first century or an insurrection in the twenty-first, there’s a reckoning to be had.\nDo you continue doubling down on your current direction? Do you hold to your zealotry, or fundamentalism, everything you’ve believed and predicated your life on? Or do you pause to reconsider from a different angle? At least, that’s been my experience.\n An Unsatisfying Easter To me, in that context, Don Francisco’s Easter is… too easy. His triumphant refrain—\n He’s alive, he’s alive\nHe’s alive and I’m forgiven,\nHeaven’s gates are open wide.\n —seems to hearken back to the naivety of Palm Sunday, a week before, rather than squaring with what happened on Good Friday. The video itself even makes the connection explicit! It overlays the chorus with footage of Palm Sunday from Franco Zeffirelli’s Jesus of Nazareth.\nTo me his Easter is too easy, and his ballad speaks to what I might call vindicationalism. It resonates with all the wrong parts of me: the parts that, as a believer, didn’t want to be wrong, didn’t like the discomfort of thinking I’d made a fool of myself before the unbelieving world by throwing my lot in with zealots. On Easter morning, of all mornings, there was a triumph of my beliefs over the mundaneness of history—a triumph the secular world may not have seen, but that I believed, and could rest my faith in nonetheless.\nI’ve never been an extreme cynic, but the parallels are there between those who said Jesus had risen and was coming back—someday—and those who even today say the 45th American president is running politics from behind the scenes.\nIsn’t it worth a moment to consider the myths we hold dear, what they mean, how we relate to them, and how they resonate with the rest of our lives?\nAnd so this year I’ve been considering what it looks like to celebrate Holy Week as a former believer and as a skeptic. In fact if I’ll be honest, I’ve been thinking about it since last Holy Week, in 2020. It just took me a year to get there.\n Good Friday without Easter My first reflection along those lines has been, “What if I were to celebrate Good Friday, without celebrating Easter?” For someone who doesn’t actually believe in the resurrection, or any resurrection per se, it would be a lot more appropriate!\nNot only would it be more appropriate or intellectually honest to celebrate Good Friday without Easter, but it would also give me space, a special time of the year to commemorate the loss of faith, that moment of going from “true believer” to something else, whatever that something is, if it’s even defined at all (which to be honest it doesn’t have to be).\nAnd I sat with that prospect for a long time: Good Friday without Easter. Many preachers would use the concept as a foil: What would Good Friday be, without Easter? But I asked unironically. I liked the grittiness of the question. Could I sit with it? I decided I could. As former true believers, we can absolutely reclaim Good Friday as a memorial day to commemorate that transition.\nThe loss of belief is, after all, like a death. It’s the death of an identity, and of a way of thinking where everything made sense, albeit at a price. It’s the death of connections and friendships in many cases, even marriages. Going from “true believer” to something else, anything else, is a change, and it is healthy to grieve it.\n A Truly Good Friday We can grieve the loss of belief, and at the same time we can also celebrate it. We celebrate because when we lose absolutist forms of belief we gain so much more. We gain perspective, nuance, openness, contentment, intellectual honesty, better friendships. For some and in some ways, losing absolute forms of belief opens us for the first time to happiness.\nSo when I say I celebrate Good Friday, I don’t just mean I commemorate it in sackcloth and ashes. I also mean I remember it with joy. The death of belief is a gate to new ways of life.\nAnd it’s as I thought of what Good Friday opens us to that I realized I was already celebrating Easter, after all. But it wasn’t the same Easter as before.\n The Ideas of the Shipwrecked Many former Evangelical Christians—Exvangelicals, as we often call ourselves—use the term “deconstruction” to talk about dismantling the unhealthy, untrue, or unwanted aspects of our former faith. Deconstruction is often kicked off by a “Good Friday” experience.\nWe talk about deconstruction, but it’s also common to talk about “reconstruction.” Reconstruction is not necessarily a movement back toward faith—certainly not toward the same faith, but just as often not toward any. Instead, it’s a movement of building our own moral, ethical, or spiritual framework to cling to and work from as we move through life: not a framework that was handed to us this time, but one that we own our part in creating, one we take full responsibility for as we make meaning with our fellow humans.\nDanish philosopher Søren Kierkegaard once wrote about “the ideas of the shipwrecked”:\n And this is the simple truth—that to live is to feel oneself lost. He who accepts it has already begun to find himself, to be on firm ground. Instinctively, as do the shipwrecked, he will look around for something to which to cling, and that tragic, ruthless glance, absolutely sincere, because it is a question of his salvation, will cause him to bring order into the chaos of his life. These are the only genuine ideas; the ideas of the shipwrecked. All the rest is rhetoric, posturing, farce.\n Nothing makes me feel shipwrecked like a solid, Good Friday deconstruction. And what is reconstruction if not the self-aware, honest survival of the shipwrecked?\nAnd that—the survival of the shipwrecked—is where I place my Easter. It’s a resurrection of sorts, a new life after a death. But it’s a new life we knowingly make for ourselves.\nThere is no vindicationalism in my Easter; there is no triumphant chorus, no Mary coming to tell us the stone’s been rolled away. It’s not about us having been right, or him having been right, all along. It comes after a full reckoning of all the ways in fact we got it wrong. It pierces our heart with the joyful realization that there might actually be many ways to be right, that we can now make friends with a lot of people we might have once written off as dangerously wrong.\nMore than a vindication, we might say it’s a challenge, and an invitation to live into the reality of Good Friday in a new way.\n A Different Christianity You might say that I could say all this, the best parts anyway, and still be a Christian. After all, the message of Christianity is—or should be—that Jesus came not to be served but to serve, not to overthrow the government but to show a different way of living. And one can’t really live into all that until one’s grappled with Good Friday.\nYou would be right, of course. In fact I always leave the door ajar, aware that my journey may one day find me back in the church. But to me, no faith is real that doesn’t square with the reality of Good Friday, or that doesn’t look full in the face of its own Good Fridays.\nI still contend that that’s a different kind of Christian faith: one held as a personal choice, to which culture wars, persecution complexes and the vindication of having been right are utterly foreign.\nAnd it may be that that’s most Christians’ faith! I certainly know plenty of individuals who fit the description. But there’s a strain of Christianity in America, an influential and powerful one, a strain that does not mix well with politics and yet mixes with it all too easily, that does not work this way. It’s the faith of the “true believer,” from Don Francisco to Q-Anon. It’s a kind of faith whose natural and proper end is a Good Friday, no matter what Easter may, or may not, look like.\nIf even a former true believer such as myself can reclaim Good Friday and find a new Easter—the Easter of the Shipwrecked—maybe those remembrances can give us hope amid our broader cultural and political divisions. If I can square with reality and find a new moral and spiritual fiber, maybe the Q-Anon conspiracy theorist, or the anti-LGBTQ religious zealot, or the right-wing insurrectionist can, too.\n ","date":1617494400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1617585470,"objectID":"79666ed24ba0599e3074df5589f9c720","permalink":"/post/2021-04-04-easter-of-the-shipwrecked/","publishdate":"2021-04-04T00:00:00Z","relpermalink":"/post/2021-04-04-easter-of-the-shipwrecked/","section":"post","summary":"It’s been many years since Easter was more for me than brunch and candy and egg hunts.\nLately I’ve been thinking, though, about what Easter does and doesn’t mean, about what it might mean to me as a former believer, and about how all that meaning relates to America’s cultural and political divide.\nThe Dilemma of Winston’s Diary That topic is a lot to take on, so I’ll start by acknowledging two inherent challenges it’s posed.","tags":["Life","Essays","Easter"],"title":"Easter of the Shipwrecked","type":"post"},{"authors":[],"categories":[],"content":"   Source Links How to Add Source Links How Does It Work?  Site Parameters Post Header YAML Built-In Variables Variable Definition Defaults Print Statement Curly-Curly Operators HTML Partials    Source Links If you’ve ever noticed, at the top of any Tidyverse documentation page is a link to the source file for the functions described on the page.\nThis level of out-there transparency may or may not be what you want in your blog. But it’s especially useful in a work context.\nConsider the scenario:\n Aasif runs an analysis in January and writes about it in the team blog. Stakeholders and others throughout the company read about it there. Bianca, a VP, is looking at the results 3 months later and is curious if they still hold with the new data that’s come in, or if we tweak such-and-such an assumption. But Aasif is on vacation, so Bianca asks Charlie to run the analysis. She shows him the post where she read about it all. The source link literally could not be more obvious, right at the top of the post. So Charlie has a much easier time re-running it.  Now we all know that’s not the end of the story; it only means he’s found the file! But finding the file that easily is not at all trivial in a multi-team environment.\nSo I’ve implemented these little links at work, and I’ve done it here as well. It’s actually pretty easy to do.\n How to Add Source Links It takes no more than 6 steps—counting liberally. After we walk through those steps, I’ll explain how they work.\nIn config/_default/params.toml find this line and ensure it’s accurate:\n# Enable visitors to edit pages? # `repo` defines the repository URL. `editable` defines which page types can be edited. edit_page = {repo_url = \u0026quot;https://github.com/BenjaminWolfe/benjamin\u0026quot;, content_dir = \u0026quot;\u0026quot;, repo_branch = \u0026quot;main\u0026quot;, editable = {docs = true, page = false, post = false}} Add these lines after it:\n# Show source links? # `source_path` is everything between `repo_url` and `repo_branch` (above) # in the link to an Rmd, ipynb, or md file. It varies from provider to provider. show_source_links = true source_path = \u0026quot;/blob/\u0026quot; Find the file themes/hugo-academic/layouts/partials/page_metadata.html and copy it to layouts/partials/page_metadata.html. (That is, copy it from themes/hugo-academic into the root of your site.) This is how you override a template in Hugo; that way if you update your Hugo Academic theme, you won’t lose your changes.\n At the top of the file after $is_list and $page are defined, add this line:\n{{ $source_url := print $page.File.Dir $page.File.BaseFileName ($page.Params.source_extension | default \u0026quot;.md\u0026quot;) }} Then, after the section on article reading time, add this code block:\n {{ if and (site.Params.show_source_links) (eq $page.Type \u0026quot;post\u0026quot;) }} \u0026lt;span class=\u0026quot;middot-divider\u0026quot;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026quot;source-reference\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;{{ site.Params.edit_page.repo_url }}{{ site.Params.source_path }}{{ site.Params.edit_page.repo_branch }}/content/{{ $source_url }}\u0026quot; target=\u0026quot;_blank\u0026quot; rel=\u0026quot;noopener\u0026quot;\u0026gt;{{ $source_url }}\u0026lt;/a\u0026gt; \u0026lt;/span\u0026gt; {{ end }} Finally, when you start each post, include this in the YAML:\nsource_extension: \u0026#39;.Rmd\u0026#39;   How Does It Work? I think the Hugo docs are actually really intuitive and user-friendly, on a par maybe with the Tidyverse and jQuery docs. Reading through them even cursorily gives you a pretty good sense of how things work.\nSite Parameters Anything you put in config/_default/params.toml is accessible with site.Params.your_lowercase_toml_parameter.\n This is where we get site.Params.show_source_links and site.Params.source_path, parameters you’ve just added yourself. Two others already existed: site.Params.edit_page.repo_url and site.Params.edit_page.repo_branch.   Post Header YAML Anything you put in the YAML headers of a file are accessible with .page.Params.your_lowercase_yaml_parameter. The accessor is slightly different in our code—it starts with $p instead of .p—only because $page is defined as equal to .page a few lines earlier.\nThis is where $page.Params.source_extension comes from. Note that if you are sure you’ll always be writing .Rmd files, you can hard-code this into the template! Then you can skip adding the parameter to your post headers.\nAdding the parameter to the YAML means this same link can work for R Markdown, Jupyter Notebooks, or plain old markdown files.\n Built-In Variables $page.File.Dir and $page.File.BaseFileName are built-in page attributes, documented straightforwardly in the Hugo docs.\n Variable Definition Variables in Hugo are declared with the := operator. Later changes to the variable’s value can be made with = (no colon).\n Defaults The default statement is a little trick I picked up from themes/hugo-academic/layouts/partials/page_edit.html, as I was looking to replace instances of master with main:\n\u0026lt;a href=\u0026quot;{{site.Params.edit_page.repo_url}}/edit/{{site.Params.edit_page.repo_branch | default \u0026quot;master\u0026quot;}}/{{$content_dir}}/{{.File.Path}}\u0026quot;\u0026gt; Here it’s reasonable to assume an .md file extension if one isn’t specified. This is especially the case if you happen to be using hugodown; hugodown will always have an .md file, since it allows Hugo to generate the HTML files server-side.\n Print Statement print here functions like paste0 in R, simply concatenating the arguments after it.\n Curly-Curly Operators layouts/partials/page_metadata.html is written in HTML. Anything between the double curly braces is run and, if there’s output, that output is included in the HTML. You might think of it as a glue statement writ large. The operators will be even more familiar to you if you’ve ever used the whisker package.\n HTML Partials layouts/partials/page_metadata.html is not a full web page; it’s a partial page dictating only how to display a page’s metadata. That allows this same HTML template to be reused in several places:\n layouts/partials/page_header.html layouts/partials/li_compact.html layouts/partials/li_list.html layouts/partials/li_card.html  You can trace through what is used where if you have your site open in RStudio by using the Command+Shift+F (or Control+Shift+F, for Window) “Find in Files” functionality.\npage_header.html for example is in turn used in a whole host of HTML pages, including layouts/section/post.html. And that is how we end up seeing our output at the top of the page you’re currently reading.\n  ","date":1596153600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596258067,"objectID":"f4e852b7ec6dbbe48e3f119686231bc7","permalink":"/post/2020-07-31-hugo-academic-source-links/","publishdate":"2020-07-31T00:00:00Z","relpermalink":"/post/2020-07-31-hugo-academic-source-links/","section":"post","summary":"Check out the source link on this post! Learn how to do that in your Hugo Academic blog, why you might, and how it works.","tags":["R Markdown","Reproducibility","R"],"title":"Hugo Academic Source Links","type":"post"},{"authors":[],"categories":[],"content":"    The Simplicity of Knitr’s HTML Output  Example Setup  The Costs of Simplicity: File Size \u0026amp; Transparency  File Size Transparency  Practical Consequences: Diffing Files Intermission!  Adding the DT Library  Externalizing Code Using Content Delivery Networks (CDNs)  Getting Started with CDNs Rounding Up Libraries Removing Local Files Pause: What We’ve Accomplished  Zip Your Files Have a Script Do the Work  Swapping in CDNs Listing Files to Delete Deleting Files Looping through Multiple Reports  Have Git Run the Script  Writing a Bash Script Passing an Argument to the R Script Troubleshooting Logging / Messaging    The Simplicity of Knitr’s HTML Output Have you ever noticed that when you save a page from the internet, you get an HTML page plus an extra folder of supporting files?\nFor example, right-click on my website and click “Save As…,”\nand this is what you get:\nBut when you when you render an R Markdown file as HTML, instead it comes out as a single HTML file, with no folder of supporting files?\nIf you haven’t noticed this difference, or you don’t know what I mean, we’ll walk through a minimal reproducible example below to better understand it.\nThis simplicity makes your output very easy to share with stakeholders. But it has its drawbacks, and we’ll use the same example later in the post to see those as well. Then we’ll spend time exploring ways around those drawbacks.\nSince you might not be at your laptop to actually run this example, you can also find it in a separate GitHub repository. You can follow the repository commit by commit as we explore knitr’s simplicity, the down sides of that simplicity, and what can be done about those down sides. To cut to the chase, you can just look at my cdnify.R and pre-commit scripts there.\nThis upcoming section is covered by the third and fourth commits.\nExample Setup In RStudio, from the New File menu at the top left, choose R Markdown….\nIn the dialog box, feel free to add a title. Then select HTML and hit OK.\nSave the new file (I called it Report.Rmd) and then “knit” it, either using the knit button at top or by hitting Control+Shift_K (Command+Shift+K on a Mac).\nWhat you’ll get is a single file called something like report.html. Open it up to see a beautiful HTML version of the Rmd file you started with. This file is all you need to send to a stakeholder for them to open and read your work.\n  The Costs of Simplicity: File Size \u0026amp; Transparency Unfortunately, this simplicity comes with two costs.\nFile Size The first cost is file size. If you look at your report itself, you’ll see that it’s quite small: less than 1kB.\nBut the HTML file is more than 700kB.\nSo what changed? It’s obviously not that HTML is 700x longer than markdown for the same text.\nTwo things changed:\nThere’s now an embedded image (the plot). There are scripts and styling embedded in the file as well (JavaScript \u0026amp; CSS content).  We all know that images increase filesize. But it’s actually the scripts and styling that account for most of the difference:\n  original filesize if we take out the… the new size is… so it accounted for…    713kB image 630kB 83kB  713kB scripts + styling 93kB 620kB!     Transparency The second cost of putting everything in one easy-to-share HTML file is transparency.\nTo see this cost, let’s peel back the curtain a little on the HTML file. If you’re viewing the report in the RStudio viewer, go to the top left and click Open in Browser:\nThen with the report open in your browser of choice, right-click on the report and click View Page Source:\nAs you browse the page source, just under the title you’ll see what’s called minified code.\nLet’s talk through minified code for a moment.\nMinified JavaScript \u0026amp; CSS This small web page relies on a number of JavaScript and CSS libraries. One of them, the one depicted here, is a JS library called jQuery.\nUsually, when code—in any language—relies on a library, you simply refer to it at the top of the page with one line. For example, if you have an R script that relies on the lubridate package, you might include a line like this at the top of your script:\nlibrary(lubridate) Then throughout your script, R knows what to do when you use functions from the lubridate package.\nBut for that line to work, whoever’s running your code has to have lubridate installed on their computer. So in the case of our HTML report—which uses jQuery much like we might use lubridate—where would the library be installed?\nTo simplify all of that, and keep everything in one file, literally all of jQuery is included in report.html.\nBut libraries are big, of course; jQuery itself is 250kB. So we often use what’s called a minified version of the library. White space, new lines, and comments are stripped out, and variable names are as short as possible. It’s not meant to be readable; it’s meant to save filespace.\n Images Likewise, images are included within the text of the HTML document, encoded as text. To see this, scroll down in the source to where you’d expect to see the picture:\nThe picture is a png file, but it’s encoded as a long (83k characters!), otherwise meaningless string.\n   Practical Consequences: Diffing Files All of this has consequences for your workflow, perhaps the biggest of which is that you can’t diff files.\nIf you don’t use git much for version control, or you don’t follow the terminology, diffing files just means comparing files (or contrasting them) to look for differences. Diffing files is good for answering questions like “What changed since the last time I ran this?” or “What have I accomplished since my last commit?” It’s what you see when you pull up a git UI to see what’s changed.\nThe problem is that most interfaces won’t diff large files automatically, and some won’t diff them at all. This is what GitHub Desktop shows when I try to diff the HTML we just created:\nOf course you can click Show Diff. But even when you can diff the files, all the gobbledeegook—both minified code and text-encoded images—makes it harder to make sense of the changes.\n Intermission! In a moment we’ll walk through 3 tips to tidy up your HTML output and reduce your file size while keeping things easy to share.\nBut before we do that I’d like to make just one change to our report. (If you’re following along in GitHub, see this commit.) You can skip this section if you like. All we’re doing is making the dataset summary section a little prettier.\nAdding the DT Library Here’s what the dataset summary looks like right now:\nIt’s functional and informative in the aggregate, though a little plain. But let’s say our client wants to be able to browse the actual data, and let’s say they like things to look a little prettier.\nFor that we use the DT library, which takes just 3 lines of code. First make sure you’ve installed it:\ninstall.packages(\u0026quot;DT\u0026quot;) Then add a library call to the setup code chunk in your report:\n```{r setup, include=FALSE} knitr::opts_chunk$set(echo = TRUE) library(DT) # add this line ``` And finally change the cars code chunk from this—\n```{r cars} summary(cars) ``` —to this:\n```{r cars} datatable(cars) ``` And now the HTML is super pretty!\nI include this example to show that with every change to pretty up your report, add widgets or improve the styling, you’re going to continue adding minified JS or CSS and increasing the filesize. In this case, we’re now up to 916 kilobytes, another increase of 203kB!\nAnd now with that taken care of, we turn to the solution. As mentioned above we’ll walk through 3 steps:\n  step (see below) solves…    code externalization transparency  content delivery networks (CDNs) file size  file compression (.zip) ease of use      Externalizing Code As we’ve seen, your HTML file includes entire libraries of JS \u0026amp; CSS code in it: code that bloats the file, code that won’t appreciably change from one version to the next, code that you couldn’t read even if you wanted to, because it’s minified.\nSo the first thing to do is to split that code out into its own JavaScript and CSS files. What’s left in the HTML file will then be actual content. It will be small enough to diff and meaningful to diff. And if the libraries change, you can track that separately.\nLet’s get to it.\nAt the end of the YAML at the top of your file is a line that tells knitr how to output results:\noutput: html_document We need to change that so that knitr no longer tries to keep everything in the same document:\noutput: html_document: self_contained: false When we do, and re-knit, the change is striking. Suddenly the HTML file is only 7kB (down 99%!):\nIt’s smaller because all the code has been moved to a separate folder, a folder called report_files. This folder is normal; it’s what you get when you save a page off the internet, as we saw above.\nNot only is the HTML file smaller, but the git diff is now a lot more readable. In the diff from this commit in GitHub, for example, each library file shows up separately, and you can identify each one by filename without looking at the contents:\nAnd the HTML file itself is much more readable. I encourage you to check it out, either by viewing the source on own HTML file or checking my repo.\nThere is one significant downside, though. While the files are cleaner, smaller, and easier to diff, we’ve increased the overall filesize more than 4x. The new report_files folder takes up 4.3 megs!\nWhere does this size come from?\nIn our case, 3.7 of those megabytes come from the Bootstrap library, which bills itself as “the most popular HTML, CSS, and JS library in the world.” Basically, it makes our content look pretty.\nNow, filesize may not be an issue for you. If you host your files on a web server or shared file system, you might just send links. Sending links is usually the best way to share content anyway.\nBut if you have to send attachments, or if you send links but your shared space has storage restrictions, you’ll want to pare down.\n Using Content Delivery Networks (CDNs) Putting aside the filesize issue for just a moment, at this point you might have a question:\n If Boostrap is the most popular HTML, CSS, and JS library in the world—obviously use by a lot of people—all these people can’t be hosting Bootstrap separately, can they? There’s got to be a way to point to a common location.\n If you have that question (as I did), you would be right! And the way it’s done is called a Content Delivery Network, or CDN.\nYou can see it, for example, on Bootstrap’s site:\nBootstrap is providing URLs for common locations where they host the library for everyone. Developers can then point to these URLs at the top of their HTML code, much like you’d include library(lubridate) at the top of an R script.\nGetting Started with CDNs Currently, your file does something similar, though not quite the same; it doesn’t use CDNs. It points to Bootstrap and other libraries at the top—\n—but the library references are local, pointing to files in the report_files folder. What we want is to replace those references with CDNs.\nOnce we replace the local references, we can delete the local files. And then voilà! We’ve reduced the overall filesize.\nSo to preview the next few sections:\nFirst we’ll round up all the libraries we’re referencing, and see which ones have CDNs. Then we’ll swap the references and remove the local files. Then we’ll script those steps in R. Lastly we’ll automate the script and forget about it. Every time we check in changes, git will run the script automatically.   Rounding Up Libraries First we round up the libraries our HTML file uses. Other HTML files may use different libraries, but this process should be the same, and is easy.\nWhat are all the libraries we’re using? As we’ve seen, they’re listed near the top of the HTML page:\n\u0026lt;script src=\u0026quot;report_files/jquery-1.12.4/jquery.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link href=\u0026quot;report_files/bootstrap-3.3.5/css/bootstrap.min.css\u0026quot; rel=\u0026quot;stylesheet\u0026quot; /\u0026gt; \u0026lt;script src=\u0026quot;report_files/bootstrap-3.3.5/js/bootstrap.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;report_files/bootstrap-3.3.5/shim/html5shiv.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;report_files/bootstrap-3.3.5/shim/respond.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;report_files/navigation-1.1/tabsets.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link href=\u0026quot;report_files/highlightjs-9.12.0/default.css\u0026quot; rel=\u0026quot;stylesheet\u0026quot; /\u0026gt; \u0026lt;script src=\u0026quot;report_files/highlightjs-9.12.0/highlight.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;report_files/htmlwidgets-1.5.1/htmlwidgets.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link href=\u0026quot;report_files/datatables-css-0.0.0/datatables-crosstalk.css\u0026quot; rel=\u0026quot;stylesheet\u0026quot; /\u0026gt; \u0026lt;script src=\u0026quot;report_files/datatables-binding-0.11/datatables.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link href=\u0026quot;report_files/dt-core-1.10.19/css/jquery.dataTables.min.css\u0026quot; rel=\u0026quot;stylesheet\u0026quot; /\u0026gt; \u0026lt;link href=\u0026quot;report_files/dt-core-1.10.19/css/jquery.dataTables.extra.css\u0026quot; rel=\u0026quot;stylesheet\u0026quot; /\u0026gt; \u0026lt;script src=\u0026quot;report_files/dt-core-1.10.19/js/jquery.dataTables.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link href=\u0026quot;report_files/crosstalk-1.0.0/css/crosstalk.css\u0026quot; rel=\u0026quot;stylesheet\u0026quot; /\u0026gt; \u0026lt;script src=\u0026quot;report_files/crosstalk-1.0.0/js/crosstalk.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; Let’s notice a few patterns here:\n Each line is either a link (for a CSS file) or a script (for JavaScript). The part we want is in quotes after href= (for links) or src= (for scripts). Each reference starts with report_files/, since that’s where the libraries are stored. Each library is versioned, with numbers like x.y or x.y.z. (This is called semantic versioning: x is the major version, y the minor version, and z the current patch.)  With those patterns in mind, let’s write this again:\n   Simplified Filepath  Version      jquery-x.y.z/jquery.min.js  1.12.4    bootstrap-x.y.z/css/bootstrap.min.css  3.3.5    bootstrap-x.y.z/js/bootstrap.min.js  3.3.5    bootstrap-x.y.z/shim/html5shiv.min.js  3.3.5    bootstrap-x.y.z/shim/respond.min.js  3.3.5    navigation-x.y/tabsets.js  1.1    highlightjs-x.y.z/default.css  9.12.0    highlightjs-x.y.z/highlight.js  9.12.0    htmlwidgets-x.y.z/htmlwidgets.js  1.5.1    datatables-css-x.y.z/datatables-crosstalk.css  0.0.0    datatables-binding-x.y/datatables.js  0.11    dt-core-x.y.z/css/jquery.dataTables.min.css  1.10.19    dt-core-x.y.z/css/jquery.dataTables.extra.css  1.10.19    dt-core-x.y.z/js/jquery.dataTables.min.js  1.10.19    crosstalk-x.y.z/css/crosstalk.css  1.0.0    crosstalk-x.y.z/js/crosstalk.min.js  1.0.0     Now I was able to find CDNs for the 9 green rows, simply by googling [name of library] [version] CDN for each one.\nHere, in order, are the URLs I found. I tried to match the versioning, but if it was close I just used what I found.\n   CDN  Version Googled  Version Found      https://code.jquery.com/jquery-1.12.4.min.js  1.12.4  1.12.4    https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css  3.3.5  3.3.5    https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js  3.3.5  3.3.5    https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js  3.3.5  3.7.3    https://oss.maxcdn.com/respond/1.4.2/respond.min.js  3.3.5  1.4.2    https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.18.0/build/styles/default.min.css  9.12.0  9.18.0    https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.18.0/build/highlight.min.js  9.12.0  9.18.0    https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css  1.10.19  1.10.20    https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js  1.10.19  1.10.20      Removing Local Files To be clear, the next step is very straightforward. We simply replace strings that look like this—\nreport_files/bootstrap-3.3.5/css/bootstrap.min.css —with ones that look like this:\nhttps://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css Then, since the file report_files/bootstrap-3.3.5/css/bootstrap.min.css is no longer needed (for example), we can delete it.\nWe’ll follow these steps manually once through before scripting them.\nManual Steps Start by opening report.html in a text editor:\nIn the text editor, delete everything from report_files/ to bootstrap.min.css—\n—and for just a moment, try leaving it as a blank string. This is a great chance to see what Bootstrap actually does.\nRemember what the report looked like before you deleted that href:\nIf you save the report right now, and open it in Chrome, instead it looks like this:\nNow that you’ve seen what you’re missing without bootstrap, copy-paste in the URL of the CDN—\n—and save and open in Chrome again. Everything’s back to normal! The CDN worked.\nAnd since the CDN worked, we can delete the file report_files/bootstrap-3.3.5/css/bootstrap.min.css.\nYou can even refresh the page in Chrome now, and you’ll see it still works without the local file.\nSo now, since that worked, it’s time to take care of the rest of the references! In cooking-show style, I’ll simply pull the completed pie from the oven and show you what it looks like.\nThis is the section right under the title in the HTML file. You can just copy-paste them into your file if you don’t want to go line by line.\n\u0026lt;script src=\u0026quot;https://code.jquery.com/jquery-1.12.4.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;meta name=\u0026quot;viewport\u0026quot; content=\u0026quot;width=device-width, initial-scale=1\u0026quot; /\u0026gt; \u0026lt;link href=\u0026quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\u0026quot; rel=\u0026quot;stylesheet\u0026quot; /\u0026gt; \u0026lt;script src=\u0026quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;https://oss.maxcdn.com/respond/1.4.2/respond.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;report_files/navigation-1.1/tabsets.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link href=\u0026quot;https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.18.0/build/styles/default.min.css\u0026quot; rel=\u0026quot;stylesheet\u0026quot; /\u0026gt; \u0026lt;script src=\u0026quot;https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.18.0/build/highlight.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;report_files/htmlwidgets-1.5.1/htmlwidgets.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link href=\u0026quot;report_files/datatables-css-0.0.0/datatables-crosstalk.css\u0026quot; rel=\u0026quot;stylesheet\u0026quot; /\u0026gt; \u0026lt;script src=\u0026quot;report_files/datatables-binding-0.11/datatables.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link href=\u0026quot;https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css\u0026quot; rel=\u0026quot;stylesheet\u0026quot; /\u0026gt; \u0026lt;link href=\u0026quot;report_files/dt-core-1.10.19/css/jquery.dataTables.extra.css\u0026quot; rel=\u0026quot;stylesheet\u0026quot; /\u0026gt; \u0026lt;script src=\u0026quot;https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link href=\u0026quot;report_files/crosstalk-1.0.0/css/crosstalk.css\u0026quot; rel=\u0026quot;stylesheet\u0026quot; /\u0026gt; \u0026lt;script src=\u0026quot;report_files/crosstalk-1.0.0/js/crosstalk.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;  Pruning More Aggressively Now, in the previous section after we deleted bootstrap.min.css, we only deleted that one file. But Bootstrap includes a lot of files. Even just the css folder has at least 40!\nBut we don’t have to be that surgical. The local Bootstrap library isn’t referred to at all anymore, so we can delete the whole folder.\nIn fact, at this point there are just 7 local references left in report_files:\n navigation-1.1/tabsets.js htmlwidgets-1.5.1/htmlwidgets.js datatables-css-0.0.0/datatables-crosstalk.css datatables-binding-0.11/datatables.js dt-core-1.10.19/css/jquery.dataTables.extra.css crosstalk-1.0.0/css/crosstalk.css crosstalk-1.0.0/js/crosstalk.min.js  Why not just keep those files and delete the rest?\nFor example, simply consolidate these files to a temp directory,\ndelete the rest,\nand then move the important files back.\nOne more thing to note!\nIn these last screenshots, I also held onto the folder figure-html; that’s where our plot lives!\nJust remember that whatever script we write will have to solve for figure-html as well.\n  Pause: What We’ve Accomplished Before moving on, let’s take a moment to celebrate our successes. First, if you open your HTML file in Chrome, you’ll see that everything works. We truly no longer needed the local files!\nSecond, the report_files folder is now only 435kB: 90% smaller than the earlier report_files folder, and less than half the size of the HTML file we started with.\n  Zip Your Files In a moment we’ll script and automate what we just did. But in the end, this method still leaves you with a folder of files to share. That’s a minor frustration in email-heavy settings.\nThe simple fix is to compress both the report and the report files into a single zip folder.\nIn this case, the final zipped size was a meager 80 kilobytes: less than a tenth the size of the HTML file we started with!\nYou may still use R in a context where stakeholders either can’t or won’t open a zip file to click through on the single HTML file inside it. Unfortunately, I don’t have a solution for that. 🤷\n Have a Script Do the Work Now comes the time when we ask ourselves:\n This seems pretty straightforward. Do you think we can do it in a script?\n And the answer is, of course we can! This is R. There’s got to be a way to do it.\nTo slow things down, I’m going to write it piece by piece. If you’re impatient and want to skip to the end, go for it!\nSwapping in CDNs First we’ll do some setup work that should be fairly self-explanatory.\nFor this next section, if you’re not familiar with the here package, I recommend Jenny Bryan’s ode, “I love the here package. Here’s why.”\nOr just set html_file to wherever report.html lives—e.g. /Users/benjamin/report.html—but without the .html file extension.\nlibrary(tidyverse) library(here) # make a tibble of references to be replaced references \u0026lt;- tibble( local_file = c( \u0026quot;jquery-1.12.4/jquery.min.js\u0026quot;, \u0026quot;bootstrap-3.3.5/css/bootstrap.min.css\u0026quot;, \u0026quot;bootstrap-3.3.5/js/bootstrap.min.js\u0026quot;, \u0026quot;bootstrap-3.3.5/shim/html5shiv.min.js\u0026quot;, \u0026quot;bootstrap-3.3.5/shim/respond.min.js\u0026quot;, \u0026quot;highlightjs-9.12.0/default.css\u0026quot;, \u0026quot;highlightjs-9.12.0/highlight.js\u0026quot;, \u0026quot;dt-core-1.10.19/css/jquery.dataTables.min.css\u0026quot;, \u0026quot;dt-core-1.10.19/js/jquery.dataTables.min.js\u0026quot; ), cdn_url = c( \u0026quot;https://code.jquery.com/jquery-1.12.4.min.js\u0026quot;, \u0026quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\u0026quot;, \u0026quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js\u0026quot;, \u0026quot;https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\u0026quot;, \u0026quot;https://oss.maxcdn.com/respond/1.4.2/respond.min.js\u0026quot;, \u0026quot;https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.18.0/build/styles/default.min.css\u0026quot;, \u0026quot;https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.18.0/build/highlight.min.js\u0026quot;, \u0026quot;https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css\u0026quot;, \u0026quot;https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js\u0026quot; ) ) # set the filepath information html_file \u0026lt;- here(\u0026quot;report\u0026quot;) # filepath without the extension fullpath \u0026lt;- paste0(html_file, \u0026quot;.html\u0026quot;) # actual name of HTML file dir_path \u0026lt;- paste0(html_file, \u0026quot;_files\u0026quot;) # directory of local libraries # also just the name of the directory will come in handy dependency_dir \u0026lt;- \u0026quot;report_files\u0026quot; # grab the page contents page_contents \u0026lt;- read_lines(fullpath) Now let’s make the replacements. Here purrr::reduce2 is the workhorse; you’ll see a deeper explanation below.\n# the actual strings we\u0026#39;re replacing always start with report_files/ references \u0026lt;- mutate( references, local_file = paste(dependency_dir, local_file, sep = \u0026quot;/\u0026quot;) ) page_contents \u0026lt;- reduce2( .x = references$local_file, .y = references$cdn_url, .f = str_replace, .init = page_contents ) write_lines(page_contents, fullpath) purrr::reduce2 runs through our replacements iteratively, as if we’d written it like this:\npage_contents \u0026lt;- page_contents %\u0026gt;% str_replace(references$local_file[1], references$cdn_url[1]) %\u0026gt;% str_replace(references$local_file[2], references$cdn_url[2]) %\u0026gt;% str_replace(references$local_file[3], references$cdn_url[3]) %\u0026gt;% str_replace(references$local_file[4], references$cdn_url[4]) %\u0026gt;%  …and so on down the line.\nAnd we use write_lines from the readr package (loaded with the tidyverse) to write the contents back to the HTML file.\n Listing Files to Delete Now that we’ve swapped local references for CDNs, we can go about deleting files.\nAs described above, we’ll do that by first deciding which files to keep, and then deleting the rest.\nTo decide which files to keep, we’ll loop through the contents of the file and capture any remaining references with the regular expression report_files/([^\\\"]+):\n the string report_files/, followed by anything but quotes [^\\\"], one or more times +. We use a capture group () to get just the part after report_files/.  get_remaining \u0026lt;- function(page_contents) { pattern \u0026lt;- paste0(dependency_dir, \u0026quot;/([^\\\u0026quot;]+)\u0026quot;) # pattern to watch for remaining_lines \u0026lt;- str_which(page_contents, pattern) # what lines have it? if (!length(remaining_lines)) return(NA_character_) # none? return NA. str_match(page_contents[remaining_lines], pattern)[, 2] # return matches } For more on regular expressions see the stringr documentation, especially the page on str_match. Or see https://www.regular-expressions.info/ for a full tutorial.\n Deleting Files To actually delete the files we’ll use the fs package. It has intuitively named, vectorized functions like\n path to construct filepaths, dir_ls to list the files in a directory, and file_delete to delete files.  library(fs) # keep the files still explicitly named in the HTML keep_these \u0026lt;- path(dir_path, get_remaining(page_contents)) # remove everything else in the report_files folder remove_these \u0026lt;- setdiff( dir_ls(dir_path, recurse = TRUE, type = \u0026quot;file\u0026quot;), keep_these ) file_delete(remove_these)  Looping through Multiple Reports Now let’s say we have more than one HTML file—not just report.html. Let’s say they’re all in the same folder (or subfolders of it). Can we handle the whole folder at once?\nSure we can! We wrap the code above in a function, and run that function for all the reports.\nThis will be particularly useful when we get to automating the script. If the folder we use is a git repository, for example, we can tell git to tidy up and shrink all its HTML files before every commit.\nLet’s call the function we create cdnify:\nlibrary(tidyverse) library(here) library(fs) # make a tibble of references to be replaced references \u0026lt;- tibble( local_file = c( \u0026quot;jquery-1.12.4/jquery.min.js\u0026quot;, \u0026quot;bootstrap-3.3.5/css/bootstrap.min.css\u0026quot;, \u0026quot;bootstrap-3.3.5/js/bootstrap.min.js\u0026quot;, \u0026quot;bootstrap-3.3.5/shim/html5shiv.min.js\u0026quot;, \u0026quot;bootstrap-3.3.5/shim/respond.min.js\u0026quot;, \u0026quot;highlightjs-9.12.0/default.css\u0026quot;, \u0026quot;highlightjs-9.12.0/highlight.js\u0026quot;, \u0026quot;dt-core-1.10.19/css/jquery.dataTables.min.css\u0026quot;, \u0026quot;dt-core-1.10.19/js/jquery.dataTables.min.js\u0026quot; ), cdn_url = c( \u0026quot;https://code.jquery.com/jquery-1.12.4.min.js\u0026quot;, \u0026quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\u0026quot;, \u0026quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js\u0026quot;, \u0026quot;https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\u0026quot;, \u0026quot;https://oss.maxcdn.com/respond/1.4.2/respond.min.js\u0026quot;, \u0026quot;https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.18.0/build/styles/default.min.css\u0026quot;, \u0026quot;https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.18.0/build/highlight.min.js\u0026quot;, \u0026quot;https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css\u0026quot;, \u0026quot;https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js\u0026quot; ) ) cdnify \u0026lt;- function(html_file) { # set the filepath information fullpath \u0026lt;- paste0(html_file, \u0026quot;.html\u0026quot;) # actual name of HTML file dir_path \u0026lt;- paste0(html_file, \u0026quot;_files\u0026quot;) # directory of local libraries # also just the name of the directory will come in handy dependency_dir \u0026lt;- path_file(dir_path) # grab the page contents page_contents \u0026lt;- read_lines(fullpath) # the actual strings we\u0026#39;re replacing always start with report_files/ references \u0026lt;- mutate( references, local_file = paste(dependency_dir, local_file, sep = \u0026quot;/\u0026quot;) ) page_contents \u0026lt;- reduce2( .x = references$local_file, .y = references$cdn_url, .f = str_replace, .init = page_contents ) write_lines(page_contents, fullpath) get_remaining \u0026lt;- function(page_contents) { pattern \u0026lt;- paste0(dependency_dir, \u0026quot;/([^\\\u0026quot;]+)\u0026quot;) # pattern to watch for remaining_lines \u0026lt;- str_which(page_contents, pattern) # what lines have it? if (!length(remaining_lines)) return(NA_character_) # none? return NA. str_match(page_contents[remaining_lines], pattern)[, 2] # return matches } # keep the files still explicitly named in the HTML keep_these \u0026lt;- path(dir_path, get_remaining(page_contents)) # remove everything else in the report_files folder remove_these \u0026lt;- setdiff( dir_ls(dir_path, recurse = TRUE, type = \u0026quot;file\u0026quot;), keep_these ) file_delete(remove_these) } Now purrr::walk will do the heavy lifting, applying cdnify to the relevant files.\ncurrent_dir \u0026lt;- here() # or whatever directory # list all the HTML files anywhere in current_dir (but w/o the html extension) pages \u0026lt;- current_dir %\u0026gt;% dir_ls(recurse = T, regexp = \u0026quot;\\\\.html\u0026quot;) %\u0026gt;% str_replace(\u0026quot;\\\\.html$\u0026quot;, \u0026quot;\u0026quot;) # HTML files are only relevant if they come from an R Markdown file, # and if they have a folder of local dependencies are_from_markdown \u0026lt;- file_exists(paste0(pages, \u0026quot;.Rmd\u0026quot;)) have_dependencies \u0026lt;- dir_exists(paste0(pages, \u0026quot;_files\u0026quot;)) walk( pages[are_from_markdown \u0026amp; have_dependencies], cdnify )   Have Git Run the Script Now that we’ve written a script to “cdnify” all the HTML reports in a folder, how can we automate the process? Ideally we wouldn’t have to run this script every time we render a report.\nWe can automate it using a feature called git hooks. Git hooks are bash scripts that run after specific events in git; you can write hooks that run automatically before a commit, before you rebase, or before you push changes, for example.\nIn this case, we’ll tell the bash script where to find our R script, and where to find the R interpreter to run it. Then once we’ve set it in motion, we never have to think about our script again!\n(If you’re not yet using git, I highly recommend it. There are some great resources out there to learn, including Jenny Bryan \u0026amp; Jim Hester’s Happy Git and GitHub for the useR.)\nGithooks live in a hidden directory. So if you use a GUI to view folders—like Windows Explorer, or Finder on a Mac—make sure you can view hidden files first. (That’s in the View menu on Windows, or Command-Shift-Period in Finder on a Mac.)\nThen in your folder, go to .git → hooks → pre-commit.sample. Make a copy of pre-commit.sample, and rename it to just pre-commit.\nIn this folder, incidentally, are sample githook scripts for all the possible events you can “hook”:\n before you commit changes… before you push commits… before you rebase rebase… I count 11 different options!  We’re running our script before every commit (“pre-commit”) because otherwise all those libraries we failed to take out will live on in your commit history, even if you delete them later.\nWriting a Bash Script Now I don’t really know bash, but that’s what Google is for. This is one way to write the script:\n#!/bin/sh # check these variables (using forward slashes instead of backslashes): R_SCRIPT=\u0026quot;/usr/local/bin/Rscript\u0026quot; # the location of Rscript on your computer CDN_SCRIPT=\u0026quot;cdnify.R\u0026quot; # the location of the R script in the repo # find the local REPO directory HOOKS_DIR=\u0026quot;$( cd \u0026quot;$( dirname \u0026quot;${BASH_SOURCE[0]}\u0026quot; )\u0026quot; \u0026amp;\u0026amp; pwd )\u0026quot; GIT_DIR=\u0026quot;$(dirname \u0026quot;$HOOKS_DIR\u0026quot;)\u0026quot; REPO=\u0026quot;$(dirname \u0026quot;$GIT_DIR\u0026quot;)\u0026quot; # switch to CDNs \u0026quot;$R_SCRIPT\u0026quot; \u0026quot;$REPO/$CDN_SCRIPT\u0026quot; \u0026quot;$REPO\u0026quot; # stage updated files git add -u exit 0 When I wrote this, I was using a company-issued Windows laptop that had Rscript.exe in a non-standard location. You likely have Rscript on your PATH and can simplify accordingly.\nIn the next section,\n HOOKS_DIR is the folder the script is in: .../your_repository/.git/hooks. GIT_DIR is its parent directory, .../your_repository/.git. And REPO is the filepath of your repository.  So this line—\n\u0026quot;$R_SCRIPT\u0026quot; \u0026quot;$REPO/$CDN_SCRIPT\u0026quot; \u0026quot;$REPO\u0026quot; —translates to something (in my case) like this:\n\u0026quot;/usr/local/bin/Rscript\u0026quot; \u0026quot;/Users/benjamin/Documents/GitHub/knitr-cdn-demo/cdnify.R\u0026quot; \u0026quot;/Users/benjamin/Documents/GitHub/knitr-cdn-demo\u0026quot; What it’s saying is,\n use the R interpreter—found at /usr/local/bin/Rscript— to run our R script—found at .../knitr-cdn-demo/cdnify.R— and pass the script the location of the repo: .../knitr-cdn-demo.  We’ll tell the R script what to do with that string in the next section.\nNow the second to last line of the script—\ngit add -u —is critical. Without it, the script would swap the library references, delete all the right files, and follow through with your original commit—without staging its changes!\ngit add -u ensures the changes stick. But this line also has an important side effect, so beware: Any changes to your repo will be staged and committed, even if you never staged them yourself.\n Passing an Argument to the R Script We just said that this line—\n\u0026quot;/usr/local/bin/Rscript\u0026quot; \u0026quot;/Users/benjamin/Documents/GitHub/knitr-cdn-demo/cdnify.R\u0026quot; \u0026quot;/Users/benjamin/Documents/GitHub/knitr-cdn-demo\u0026quot; —passes the repository’s location to the R script. We also need to tell the script what to do with it.\nFor that we use the commandArgs function. If you pass arguments to an R script from the command line, commandArgs() returns a vector of those arguments.\ncommandArgs() can go near the bottom of our script, just before we call cdnify(), when we tell the script which folder to use. If we replace this—\ncurrent_dir \u0026lt;- here() —with a line like this—\ncurrent_dir \u0026lt;- as.character(commandArgs(trailingOnly = T)[1]) —our script will always automatically run on the git repository folder.\nAnd that’s great, but sometimes we’ll still want to run the script ourselves, right? To have the code automatically differentiate between contexts (git or manual), we can use the interactive function:\ncurrent_dir \u0026lt;- if (interactive()) { here() } else { as.character(commandArgs(trailingOnly = T)[1]) }  Troubleshooting Before git is able to run the githook, your OS may need to know the file is executable. If that’s the case you’ll get something like the yellow error message here:\nThe answer is to run this simple line from the terminal:\nchmod +x .git/hooks/pre-commit chmod is an abbreviation of “change mode,” and the +x means “make it executable.” It’s not rocket science; it’s just (again) good Googling.\nThen your file should be clearly different from the sample githook files (though the exact way that’s shown will vary from OS to OS):\n Logging / Messaging Lastly, either for our future selves or for someone else using the script, troubleshooting is always easier when you have good messaging. For the full version of the script with thorough messaging, please see cdnify.R on GitHub.\nThis is what your terminal output looks like when you run it. This is the output when report.html hasn’t changed and there’s nothing to remove. It’s even more verbose when there’ve been changes!\nIf you do check out the enhanced script, here’s a quick preview of the differences you’ll see in it:\n I don’t load the whole tidyverse, only the specific packages I use. I provide a lot of messaging around which of those packages loaded successfully. If they don’t load, I attempt to install them, and I message that fact, too. I spend time capturing which version of each library was found in the file. The code is also more flexible, capturing any version of the libraries. If the user’s R ecosystem upgrades to new library versions, I want the code to work but also message it.    ","date":1584144000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596258067,"objectID":"db712d2150d69c0f1db624a4077c091b","permalink":"/post/2020-03-14-r-markdown-shrink-tidy-your-html-output-with-cdns/","publishdate":"2020-03-14T00:00:00Z","relpermalink":"/post/2020-03-14-r-markdown-shrink-tidy-your-html-output-with-cdns/","section":"post","summary":"Ever tried sharing a standalone HTML report created in R Markdown? They can be positively HUGE.","tags":["R Markdown","HTML","Reproducibility"],"title":"R Markdown: Shrink \u0026 Tidy Your HTML Output with CDNs","type":"post"},{"authors":["Benjamin E. Wolfe"],"categories":null,"content":" Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math .\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579876495,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Academic  Academic | Documentation  Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click  PDF Export : E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions?  Ask  Documentation ","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579876495,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579876495,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579876495,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":["Benjamin E. Wolfe","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math .\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579876495,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Benjamin E. Wolfe","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math .\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579876495,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example conference paper","type":"publication"}]